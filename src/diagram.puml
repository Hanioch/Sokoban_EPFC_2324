@startuml

abstract class Element {
}

abstract class ComposableElement {
}

interface Movable {
}

class ElementStack {
}

class Cell {
  - elementStack: ElementStack
}

class Cell4Design {
}

class Cell4Play {
  - boxNumber: int
  - player: Player4Play
  - x: int
  - y: int
  - elementStack: ElementStack
}

abstract class Ground extends ComposableElement {
}

class Ground4Design {
}

class Ground4Play {
}

class Mushroom extends Element {
  - x: int
  - y: int
}

abstract class Player extends ComposableElement {
  - x: int
  - y: int
}

class Player4Design {
}

class Player4Play {
}

abstract class Target extends ComposableElement {
}

class Target4Design {
}

class Target4Play {
}

abstract class Wall extends Element {
}

class Wall4Design {
}

class Wall4Play {
}

class Board {
  - grid: Grid
}

class Board4Design {
  - maxFilledCells: int
  - player: Player4Design
  - randomGen: Random
  - isFull: BooleanBinding
  - isModifiedProperty: BooleanProperty
}

class Board4Play {
  - moves: IntegerProperty
  - gameWon: BooleanProperty
  - isModifiedProperty: BooleanProperty
}

class Grid {
  - width: int
  - height: int
  - widthProperty: IntegerProperty
  - heightProperty: IntegerProperty
  - cells: Cell[][]
}

abstract class Grid4Design extends Grid {
  - playerCell: Cell4Design
  - player: Player4Design
  - filledCellsCount: LongBinding
  - characterMissed: BooleanBinding
  - targetMissed: BooleanBinding
  - boxMissed: BooleanBinding
  - sameNumberOfBoxAndTarget: BooleanBinding
  - isAnError: BooleanBinding
}

abstract class Grid4Play extends Grid {
  - commandManager: CommandManager
  - mushroomManager: MushroomManager
  - oldGrid: Grid4Design
  - boxesOnTargetsProperty: IntegerProperty
  - totalTargetProperty: IntegerProperty
  - isStone: BooleanBinding
  - countBeforeToBeNormal: int
}

class MovePlayerCommand {
}

MovePlayerCommand --|> Command

class Box extends ComposableElement {
}

class Box4Design {
}

class Box4Play {
  - number: int
  - x: int
  - y: int
  - isOnTarget: boolean
}

Player <|-- Player4Design
Player <|-- Player4Play
Element <|-- ComposableElement
Element <|-- Wall
Element <|-- Box
Element <|-- Ground
Element <|-- Target
Element <|-- Mushroom
Cell <|-- Cell4Design
Cell <|-- Cell4Play
Wall <|-- Wall4Design
Wall <|-- Wall4Play
Box <|-- Box4Design
Box <|-- Box4Play
Ground <|-- Ground4Design
Ground <|-- Ground4Play
Target <|-- Target4Design
Target <|-- Target4Play
Board <|-- Board4Design
Board <|-- Board4Play


Player4Play --|> Movable
Box4Play --|> Movable

class CommandManager {
}

Command <|.. CommandManager

Board "1" -- "1" Grid
Grid "1" *-- "many" Cell
Cell "1" *-- "1..*" Element
Element "1" -- "1" ElementStack

@enduml